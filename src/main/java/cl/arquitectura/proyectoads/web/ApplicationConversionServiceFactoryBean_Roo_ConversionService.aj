// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cl.arquitectura.proyectoads.web;

import cl.arquitectura.proyectoads.domain.Campana;
import cl.arquitectura.proyectoads.domain.Clase;
import cl.arquitectura.proyectoads.domain.Curso;
import cl.arquitectura.proyectoads.domain.CursoProfesor;
import cl.arquitectura.proyectoads.domain.Escuela;
import cl.arquitectura.proyectoads.domain.Evento;
import cl.arquitectura.proyectoads.domain.Mensaje;
import cl.arquitectura.proyectoads.domain.MensajeEnvio;
import cl.arquitectura.proyectoads.domain.Persona;
import cl.arquitectura.proyectoads.domain.Rol;
import cl.arquitectura.proyectoads.domain.TipoMensaje;
import cl.arquitectura.proyectoads.domain.TipoPersona;
import cl.arquitectura.proyectoads.domain.Turno;
import cl.arquitectura.proyectoads.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Campana, String> ApplicationConversionServiceFactoryBean.getCampanaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Campana, java.lang.String>() {
            public String convert(Campana campana) {
                return new StringBuilder().append(campana.getNombre()).toString();
            }
        };
    }
    
    public Converter<Integer, Campana> ApplicationConversionServiceFactoryBean.getIdToCampanaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Campana>() {
            public cl.arquitectura.proyectoads.domain.Campana convert(java.lang.Integer id) {
                return Campana.findCampana(id);
            }
        };
    }
    
    public Converter<String, Campana> ApplicationConversionServiceFactoryBean.getStringToCampanaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Campana>() {
            public cl.arquitectura.proyectoads.domain.Campana convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Campana.class);
            }
        };
    }
    
    public Converter<Clase, String> ApplicationConversionServiceFactoryBean.getClaseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Clase, java.lang.String>() {
            public String convert(Clase clase) {
                return new StringBuilder().append(clase.getAsignatura()).toString();
            }
        };
    }
    
    public Converter<Integer, Clase> ApplicationConversionServiceFactoryBean.getIdToClaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Clase>() {
            public cl.arquitectura.proyectoads.domain.Clase convert(java.lang.Integer id) {
                return Clase.findClase(id);
            }
        };
    }
    
    public Converter<String, Clase> ApplicationConversionServiceFactoryBean.getStringToClaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Clase>() {
            public cl.arquitectura.proyectoads.domain.Clase convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Clase.class);
            }
        };
    }
    
    public Converter<Curso, String> ApplicationConversionServiceFactoryBean.getCursoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Curso, java.lang.String>() {
            public String convert(Curso curso) {
                return new StringBuilder().append(curso.getNivel()).append(' ').append(curso.getLetra()).toString();
            }
        };
    }
    
    public Converter<Integer, Curso> ApplicationConversionServiceFactoryBean.getIdToCursoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Curso>() {
            public cl.arquitectura.proyectoads.domain.Curso convert(java.lang.Integer id) {
                return Curso.findCurso(id);
            }
        };
    }
    
    public Converter<String, Curso> ApplicationConversionServiceFactoryBean.getStringToCursoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Curso>() {
            public cl.arquitectura.proyectoads.domain.Curso convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Curso.class);
            }
        };
    }
    
    public Converter<CursoProfesor, String> ApplicationConversionServiceFactoryBean.getCursoProfesorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.CursoProfesor, java.lang.String>() {
            public String convert(CursoProfesor cursoProfesor) {
                return new StringBuilder().append(cursoProfesor.getIdProfesor()).toString();
            }
        };
    }
    
    public Converter<Integer, CursoProfesor> ApplicationConversionServiceFactoryBean.getIdToCursoProfesorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.CursoProfesor>() {
            public cl.arquitectura.proyectoads.domain.CursoProfesor convert(java.lang.Integer id) {
                return CursoProfesor.findCursoProfesor(id);
            }
        };
    }
    
    public Converter<String, CursoProfesor> ApplicationConversionServiceFactoryBean.getStringToCursoProfesorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.CursoProfesor>() {
            public cl.arquitectura.proyectoads.domain.CursoProfesor convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CursoProfesor.class);
            }
        };
    }
    
    public Converter<Escuela, String> ApplicationConversionServiceFactoryBean.getEscuelaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Escuela, java.lang.String>() {
            public String convert(Escuela escuela) {
                return new StringBuilder().append(escuela.getNombre()).toString();
            }
        };
    }
    
    public Converter<Integer, Escuela> ApplicationConversionServiceFactoryBean.getIdToEscuelaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Escuela>() {
            public cl.arquitectura.proyectoads.domain.Escuela convert(java.lang.Integer id) {
                return Escuela.findEscuela(id);
            }
        };
    }
    
    public Converter<String, Escuela> ApplicationConversionServiceFactoryBean.getStringToEscuelaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Escuela>() {
            public cl.arquitectura.proyectoads.domain.Escuela convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Escuela.class);
            }
        };
    }
    
    public Converter<Evento, String> ApplicationConversionServiceFactoryBean.getEventoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Evento, java.lang.String>() {
            public String convert(Evento evento) {
                return new StringBuilder().append(evento.getDescripcion()).toString();
            }
        };
    }
    
    public Converter<Integer, Evento> ApplicationConversionServiceFactoryBean.getIdToEventoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Evento>() {
            public cl.arquitectura.proyectoads.domain.Evento convert(java.lang.Integer id) {
                return Evento.findEvento(id);
            }
        };
    }
    
    public Converter<String, Evento> ApplicationConversionServiceFactoryBean.getStringToEventoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Evento>() {
            public cl.arquitectura.proyectoads.domain.Evento convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Evento.class);
            }
        };
    }
    
    public Converter<Mensaje, String> ApplicationConversionServiceFactoryBean.getMensajeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Mensaje, java.lang.String>() {
            public String convert(Mensaje mensaje) {
                return new StringBuilder().append(mensaje.getFechaEnvio()).append(' ').append(mensaje.getContenido()).toString();
            }
        };
    }
    
    public Converter<Integer, Mensaje> ApplicationConversionServiceFactoryBean.getIdToMensajeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Mensaje>() {
            public cl.arquitectura.proyectoads.domain.Mensaje convert(java.lang.Integer id) {
                return Mensaje.findMensaje(id);
            }
        };
    }
    
    public Converter<String, Mensaje> ApplicationConversionServiceFactoryBean.getStringToMensajeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Mensaje>() {
            public cl.arquitectura.proyectoads.domain.Mensaje convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Mensaje.class);
            }
        };
    }
    
    public Converter<MensajeEnvio, String> ApplicationConversionServiceFactoryBean.getMensajeEnvioToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.MensajeEnvio, java.lang.String>() {
            public String convert(MensajeEnvio mensajeEnvio) {
                return new StringBuilder().append(mensajeEnvio.getIdPersona()).toString();
            }
        };
    }
    
    public Converter<Integer, MensajeEnvio> ApplicationConversionServiceFactoryBean.getIdToMensajeEnvioConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.MensajeEnvio>() {
            public cl.arquitectura.proyectoads.domain.MensajeEnvio convert(java.lang.Integer id) {
                return MensajeEnvio.findMensajeEnvio(id);
            }
        };
    }
    
    public Converter<String, MensajeEnvio> ApplicationConversionServiceFactoryBean.getStringToMensajeEnvioConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.MensajeEnvio>() {
            public cl.arquitectura.proyectoads.domain.MensajeEnvio convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), MensajeEnvio.class);
            }
        };
    }
    
    public Converter<Persona, String> ApplicationConversionServiceFactoryBean.getPersonaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Persona, java.lang.String>() {
            public String convert(Persona persona) {
                return new StringBuilder().append(persona.getNombre()).append(' ').append(persona.getApellidos()).append(' ').append(persona.getIdCurso()).append(' ').append(persona.getTelefono()).toString();
            }
        };
    }
    
    public Converter<Integer, Persona> ApplicationConversionServiceFactoryBean.getIdToPersonaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Persona>() {
            public cl.arquitectura.proyectoads.domain.Persona convert(java.lang.Integer id) {
                return Persona.findPersona(id);
            }
        };
    }
    
    public Converter<String, Persona> ApplicationConversionServiceFactoryBean.getStringToPersonaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Persona>() {
            public cl.arquitectura.proyectoads.domain.Persona convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Persona.class);
            }
        };
    }
    
    public Converter<Rol, String> ApplicationConversionServiceFactoryBean.getRolToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Rol, java.lang.String>() {
            public String convert(Rol rol) {
                return new StringBuilder().append(rol.getRol()).toString();
            }
        };
    }
    
    public Converter<Integer, Rol> ApplicationConversionServiceFactoryBean.getIdToRolConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Rol>() {
            public cl.arquitectura.proyectoads.domain.Rol convert(java.lang.Integer id) {
                return Rol.findRol(id);
            }
        };
    }
    
    public Converter<String, Rol> ApplicationConversionServiceFactoryBean.getStringToRolConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Rol>() {
            public cl.arquitectura.proyectoads.domain.Rol convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Rol.class);
            }
        };
    }
    
    public Converter<TipoMensaje, String> ApplicationConversionServiceFactoryBean.getTipoMensajeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.TipoMensaje, java.lang.String>() {
            public String convert(TipoMensaje tipoMensaje) {
                return new StringBuilder().append(tipoMensaje.getNombre()).toString();
            }
        };
    }
    
    public Converter<Integer, TipoMensaje> ApplicationConversionServiceFactoryBean.getIdToTipoMensajeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.TipoMensaje>() {
            public cl.arquitectura.proyectoads.domain.TipoMensaje convert(java.lang.Integer id) {
                return TipoMensaje.findTipoMensaje(id);
            }
        };
    }
    
    public Converter<String, TipoMensaje> ApplicationConversionServiceFactoryBean.getStringToTipoMensajeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.TipoMensaje>() {
            public cl.arquitectura.proyectoads.domain.TipoMensaje convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), TipoMensaje.class);
            }
        };
    }
    
    public Converter<TipoPersona, String> ApplicationConversionServiceFactoryBean.getTipoPersonaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.TipoPersona, java.lang.String>() {
            public String convert(TipoPersona tipoPersona) {
                return new StringBuilder().append(tipoPersona.getNombre()).toString();
            }
        };
    }
    
    public Converter<Integer, TipoPersona> ApplicationConversionServiceFactoryBean.getIdToTipoPersonaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.TipoPersona>() {
            public cl.arquitectura.proyectoads.domain.TipoPersona convert(java.lang.Integer id) {
                return TipoPersona.findTipoPersona(id);
            }
        };
    }
    
    public Converter<String, TipoPersona> ApplicationConversionServiceFactoryBean.getStringToTipoPersonaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.TipoPersona>() {
            public cl.arquitectura.proyectoads.domain.TipoPersona convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), TipoPersona.class);
            }
        };
    }
    
    public Converter<Turno, String> ApplicationConversionServiceFactoryBean.getTurnoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cl.arquitectura.proyectoads.domain.Turno, java.lang.String>() {
            public String convert(Turno turno) {
                return new StringBuilder().append(turno.getTipo()).toString();
            }
        };
    }
    
    public Converter<Integer, Turno> ApplicationConversionServiceFactoryBean.getIdToTurnoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, cl.arquitectura.proyectoads.domain.Turno>() {
            public cl.arquitectura.proyectoads.domain.Turno convert(java.lang.Integer id) {
                return Turno.findTurno(id);
            }
        };
    }
    
    public Converter<String, Turno> ApplicationConversionServiceFactoryBean.getStringToTurnoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cl.arquitectura.proyectoads.domain.Turno>() {
            public cl.arquitectura.proyectoads.domain.Turno convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Turno.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCampanaToStringConverter());
        registry.addConverter(getIdToCampanaConverter());
        registry.addConverter(getStringToCampanaConverter());
        registry.addConverter(getClaseToStringConverter());
        registry.addConverter(getIdToClaseConverter());
        registry.addConverter(getStringToClaseConverter());
        registry.addConverter(getCursoToStringConverter());
        registry.addConverter(getIdToCursoConverter());
        registry.addConverter(getStringToCursoConverter());
        registry.addConverter(getCursoProfesorToStringConverter());
        registry.addConverter(getIdToCursoProfesorConverter());
        registry.addConverter(getStringToCursoProfesorConverter());
        registry.addConverter(getEscuelaToStringConverter());
        registry.addConverter(getIdToEscuelaConverter());
        registry.addConverter(getStringToEscuelaConverter());
        registry.addConverter(getEventoToStringConverter());
        registry.addConverter(getIdToEventoConverter());
        registry.addConverter(getStringToEventoConverter());
        registry.addConverter(getMensajeToStringConverter());
        registry.addConverter(getIdToMensajeConverter());
        registry.addConverter(getStringToMensajeConverter());
        registry.addConverter(getMensajeEnvioToStringConverter());
        registry.addConverter(getIdToMensajeEnvioConverter());
        registry.addConverter(getStringToMensajeEnvioConverter());
        registry.addConverter(getPersonaToStringConverter());
        registry.addConverter(getIdToPersonaConverter());
        registry.addConverter(getStringToPersonaConverter());
        registry.addConverter(getRolToStringConverter());
        registry.addConverter(getIdToRolConverter());
        registry.addConverter(getStringToRolConverter());
        registry.addConverter(getTipoMensajeToStringConverter());
        registry.addConverter(getIdToTipoMensajeConverter());
        registry.addConverter(getStringToTipoMensajeConverter());
        registry.addConverter(getTipoPersonaToStringConverter());
        registry.addConverter(getIdToTipoPersonaConverter());
        registry.addConverter(getStringToTipoPersonaConverter());
        registry.addConverter(getTurnoToStringConverter());
        registry.addConverter(getIdToTurnoConverter());
        registry.addConverter(getStringToTurnoConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
